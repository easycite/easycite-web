@model EasyCiteLib.Models.Results<EasyCiteLib.Models.Search.SearchVm>

@{
    ViewData["Title"] = "Search";
}

@section scripts {
    <script src="~/js/event-handler.js"></script>
    <script src="~/js/ko/slideVisible.js"></script>
    <script src="~/js/ko/enterKey.js"></script>
    <script src="~/js/ko/range.js"></script>
    <script src="~/js/ko/dropdown.js"></script>
    <script src="~/js/dropdown-option.js"></script>
    <script src="~/js/search/SearchResultsMvvm.js"></script>
}

@section koApplyBindings {
    <script>
        var ApiUrls = new function() {
            var self = this;

            self['GetReferences'] = '@Url.Action("GetReferences", "Search")';
            self['AddReference'] = '@Url.Action("AddReference", "Search")';
            self['RemoveReference'] = '@Url.Action("RemoveReference", "Search")';
            self['Search'] = '@Url.Action("Search", "Search")';
        }();

        $(() => {
            var mvvm = new SearchResultsMvvm(@Json.Serialize(Model));
            ko.applyBindings(mvvm);
        });
    </script>
}

<div class="search-results container">
    <div class="row">
        <div class="col-12 mb-3 order-xl-last col-xl-4 mb-xl-0">
            <div class="d-flex justify-content-between align-items-center bg-dark text-light p-2 px-3">
                <a href="#" class="text-light"><i class="fas fa-upload"></i></a>
                References
                <a href="#" class="text-light"><i class="fas fa-download"></i></a>
            </div>
            <div class="accordion" data-bind="foreach: References">
                <div class="card p-2">
                    <a href="#" class="text-dark text-decoration-none d-flex align-items-center" data-bind="click: ToggleExpanded">
                        <span class="px-1"><i class="fas" data-bind="class: ExpandIconClass"></i></span>
                        <div class="flex-fill" data-bind="text: Title"></div>
                        <button type="button" class="btn btn-outline-danger btn-sm py-0 flex-shrink-0" data-bind="click: OnRemoveClick, clickBubble: false">
                            Remove
                        </button>
                    </a>
                    <div class="card-body" data-bind="slideVisible: IsExpanded, html: Abstract" style="display: none;"></div>
                </div>
            </div>

            <div data-bind="if: IsOutOfSync, class: IsOutOfSync" class="d-flex align-items-center justify-content-between py-2">
                <small><em>Your results are out of sync with your references.</em></small>
                <button type="button" class="btn btn-primary" data-bind="click: SyncReferences">Sync</button>
            </div>
        </div>
        @*<div class="col-sm-4 order-sm-1 col-xl-2">
            <div class="bg-dark p-2 px-3 text-light text-center">Sort / Filter</div>
            <div class="border border-top-0">
                <div class="d-flex p-1">
                    <a href="#" class="text-dark px-1"><i class="far fa-square"></i></a>
                    <div class="flex-fill pl-1">Popularity</div>
                    <a href="#" class="text-dark invisible flex-shrink-0 ml-1"><i class="fas fa-arrow-up"></i></a>
                    <a href="#" class="text-dark flex-shrink-0 ml-1"><i class="fas fa-arrow-down"></i></a>
                </div>
                <div class="d-flex p-1">
                    <a href="#" class="text-dark px-1"><i class="far fa-square"></i></a>
                    <div class="flex-fill pl-1">Author Reputation</div>
                    <a href="#" class="text-dark flex-shrink-0 ml-1"><i class="fas fa-arrow-up"></i></a>
                    <a href="#" class="text-dark flex-shrink-0 ml-1"><i class="fas fa-arrow-down"></i></a>
                </div>
                <div class="d-flex p-1">
                    <a href="#" class="text-dark px-1"><i class="far fa-square"></i></a>
                    <div class="flex-fill pl-1">Current</div>
                    <a href="#" class="text-dark flex-shrink-0 ml-1"><i class="fas fa-arrow-up"></i></a>
                    <a href="#" class="text-dark flex-shrink-0 ml-1 invisible"><i class="fas fa-arrow-down"></i></a>
                </div>
            </div>
        </div>*@
        <div class="col-12 col-xl-8 order-xl-first">
            <div class="row">
                <h1 class="col-12 text-center">Results</h1>
                <div class="col-12 d-flex justify-content-between">
                    <div class="">
                        <dropdown params="
                            text: 'Sort Options', 
                            value: SelectedSearchType,
                            options: SearchTypes,
                            optionsText: 'Text',
                            optionsValue: 'Value'"></dropdown>
                    </div>
                    <div class="px-5 flex-fill text-center">
                        <range params="
                            config: SearchDepthConfig,
                            options: SearchDepthOptions,
                            value: SearchDepth
                        "></range>
                    </div>
                    <div class="pt-1">
                        <div class="input-group">
                            <div class="input-group-prepend text-dark">
                                <div class="input-group-text"><i class="fas fa-search"></i></div>
                            </div>
                            <input type="text" class="form-control" placeholder="Search" data-bind="textInput: SearchTags, enterKey: SyncReferences" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="accordion" data-bind="foreach: SearchResults">
                <div class="card p-2 border-left-0 border-right-0 rounded-0">
                    <div class="d-flex align-items-center">
                        <a href="#" class="text-dark flex-shrink-0 pr-3"><i class="fas" data-bind="click: ToggleExpanded, class: ExpandIconClass"></i></a>
                        <a href="#" class="text-dark text-decoration-none flex-fill" data-bind="click: ToggleExpanded" style="min-width: 0;">
                            <div class="d-flex">
                                <h5 class="d-inline text-truncate" data-bind="text: Title, attr: { title: Title }"></h5>
                                <span class="px-1">&ndash;</span>
                                <span class="text-muted pr-2 flex-shrink-0" data-bind="text: PublishDate"></span>
                            </div>
                            <div class="text-muted small mt-n1">
                                <span data-bind="text: AuthorName"></span>&nbsp;&ndash;&nbsp;<span data-bind="text: Conference"></span>
                            </div>
                        </a>
                        <button type="button" class="btn btn-outline-primary btn-sm px-3 flex-shrink-0" data-bind="click: OnAddClick, disable: IsAdded, text: AddButtonText"></button>
                    </div>
                    <div class="result-details small my-2" data-bind="slideVisible: IsExpanded, html: Abstract" style="display: none;">
                        The circuit board manufacturing community is now ready to embrace the concept of moving probe in-circuit test systems, also known as Flying Probers. This is due not only to the ability of Flying Probers to eliminate the cost of fixturing, but also to their new ability to satisfy the overall test requirements. This opens up the opportunity to test a new class of boards that are not cost effective to test on fixture based systems, and were not able to be tested on previous Flying Probe test systems. Requirements such as prototype development, low to medium volume manufacturing, high net count boards, and field returns are examples of prime targets for Flying Probers. What then are the capabilities a user should look for in a Flying Prober that will insure its most effective overall use as a quick-turn around, highly flexible test tool? An attempt is made to answer this question.
                    </div>
                </div>
            </div>
            <div class="mt-3 text-center">
                <button type="button" class="btn btn-sm btn-secondary" data-bind="click: SearchPrevious, disable: PreviousIsDisabled">Previous</button>
                <span class="mx-2 text-muted cursor-default"><span data-bind="text: PageNumberDisplay"></span> of <span data-bind="text: NumberOfPages"></span></span>
                <button type="button" class="btn btn-sm btn-secondary" data-bind="click: SearchNext, disable: NextIsDisabled">Next</button>
            </div>
        </div>
    </div>
</div>

<template id="dropdown--template">
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" 
            type="button" 
            id="dropdownMenuButton" 
            data-toggle="dropdown" 
            aria-haspopup="true" 
            aria-expanded="false"
            data-bind="text: ButtonText">
        </button>
        <div class="dropdown-menu" 
            aria-labelledby="dropdownMenuButton"
            data-bind="foreach: Options">
            <a class="dropdown-item" 
                href="#"
                data-bind="text: OptionText, click: OnClick"></a>
        </div>
    </div>
</template>

<template id="range--template">
    <input type="range" class="custom-range" data-bind="
        attr: { min: Min, max: Max, step: Step },
        textInput: Value">
    <label>Search Depth: <span data-bind="text: Text"></span></label>
</template>